#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '(:lparallel) :silent t))

(defpackage :ros.script.collatz.3787876844
  (:use :cl)
  (:import-from #:lparallel
                #:*kernel*
                #:make-kernel
                #:pmap
                #:preduce))
(in-package :ros.script.collatz.3787876844)

(defun rand100 ()
  (random (expt 10 100)))

(defun collatz (value)
  (do ((size 0 (+ size 1))
       (result value (if (= (mod result 2) 1)
                       (+ (* 3 result) 1)
                       (/ result 2))))
    ((<= result 1) size)))

(defun longer-collatz (a b)
  (let* ((num 10000)
         (ns (append (loop for i upto num collect (rand100)) (list a b)))
         (cs (pmap 'list #'(lambda (r) (collatz r)) ns))
         (ncs (pmap 'list #'(lambda (r c) (list r c)) ns cs))
         (result (preduce #'(lambda (a b) (if (> (second a) (second b)) a b)) ncs)))
    (format t "~s~%" result)
    (longer-collatz (first result) (second result))))

(defun main (&rest argv)
  (declare (ignorable argv))
  (let ((*kernel* (make-kernel 4)))
    (make-random-state)
    (longer-collatz 1 1)))
;;; vim: set ft=lisp lisp:
